apiVersion: apps/v1
kind: Deployment
metadata:
  name: mywebapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mywebapp
  template:
    metadata:
      labels:
        app: mywebapp
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: 8000
          env:
            - name: MIX_ENV
              value: "{{ .Values.env.MIX_ENV }}"
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
            - name: UID
              value: "{{ .Values.env.UID }}"
            - name: GID
              value: "{{ .Values.env.GID }}"
            - name: URL_HOST
              value: "{{ .Values.env.URL_HOST }}"
            - name: URL_SCHEME
              value: "{{ .Values.env.URL_SCHEME }}"
            - name: URL_PORT
              value: "{{ .Values.env.URL_PORT }}"
            - name: POSTGRES_USER
              value: "{{ .Values.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.env.POSTGRES_DB }}"
            - name: POSTGRES_HOST
              value: "{{ .Values.env.POSTGRES_HOST }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.env.POSTGRES_PORT }}"
            - name: POSTGRES_POOL
              value: "{{ .Values.env.POSTGRES_POOL }}"
            - name: SECRET_KEY_BASE
              value: "{{ .Values.env.SECRET_KEY_BASE }}"
          volumeMounts:
            - name: local-pvc
              mountPath: {{ .Values.volume.mountPath }}
              readOnly: false
          imagePullPolicy: IfNotPresent
      volumes:
        - name: local-pvc
          persistentVolumeClaim:
            claimName: my-local-pvc
